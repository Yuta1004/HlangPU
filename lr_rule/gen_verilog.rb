# ; out a = b c if ( ) + - NUM $
$action_table = [
    # NUM  out    a    =    b    c   if    (    )    +    -    ;    $
    [   9,   3,   4,   0,   5,   6,   7,  10,   0,   0,   0,   0,   0], #  0
    [   9,   3,   4,   0,   5,   6,   7,  10,   0,   0,   0,   0,  -1], #  1
    [   0,   0,   0,   0,   0,   0,   0,   0,   0,  13,  14,  12,   0], #  2
    [   9,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0], #  3
    [   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0,   0,   0], #  4
    [   0,   0,   0,  17,   0,   0,   0,   0,   0,   0,   0,   0,   0], #  5
    [   0,   0,   0,  18,   0,   0,   0,   0,   0,   0,   0,   0,   0], #  6
    [   0,   0,   0,   0,   0,   0,   0,  19,   0,   0,   0,   0,   0], #  7
    [   0,   0,   0,   0,   0,   0,   0,   0,   0, -10, -10, -10,   0], #  8
    [   0,   0,   0,   0,   0,   0,   0,   0,   0, -11, -11, -11,   0], #  9
    [  22,   0,   0,   0,   0,   0,   0,  23,   0,   0,   0,   0,   0], # 10
    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 999], # 11
    [  -2,  -2,  -2,   0,  -2,  -2,  -2,  -2,   0,   0,   0,   0,  -2], # 12
    [   9,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0], # 13
    [   9,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0], # 14
    [   0,   0,   0,   0,   0,   0,   0,   0,   0,  13,  14,  26,   0], # 15
    [   9,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0], # 16
    [   9,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0], # 17
    [   9,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0], # 18
    [  22,   0,   0,   0,   0,   0,   0,  23,   0,   0,   0,   0,   0], # 19
    [   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  33,   0,   0], # 20
    [   0,   0,   0,   0,   0,   0,   0,   0, -10, -10, -10,   0,   0], # 21
    [   0,   0,   0,   0,   0,   0,   0,   0, -11, -11, -11,   0,   0], # 22
    [  22,   0,   0,   0,   0,   0,   0,  23,   0,   0,   0,   0,   0], # 23
    [   0,   0,   0,   0,   0,   0,   0,   0,   0,  -8,  -8,  -8,   0], # 24
    [   0,   0,   0,   0,   0,   0,   0,   0,   0,  -9,  -9,  -9,   0], # 25
    [  -3,  -3,  -3,   0,  -3,  -3,  -3,  -3,   0,   0,   0,   0,  -3], # 26
    [   0,   0,   0,   0,   0,   0,   0,   0,   0,  13,  14,  35,   0], # 27
    [   0,   0,   0,   0,   0,   0,   0,   0,   0,  13,  14,  36,   0], # 28
    [   0,   0,   0,   0,   0,   0,   0,   0,   0,  13,  14,  37,   0], # 29
    [   0,   0,   0,   0,   0,   0,   0,   0,  38,  32,  33,   0,   0], # 30
    [   0,   0,   0,   0,   0,   0,   0,   0,   0, -12, -12, -12,   0], # 31
    [  22,   0,   0,   0,   0,   0,   0,  23,   0,   0,   0,   0,   0], # 32
    [  22,   0,   0,   0,   0,   0,   0,  23,   0,   0,   0,   0,   0], # 33
    [   0,   0,   0,   0,   0,   0,   0,   0,  41,  42,  43,   0,   0], # 34
    [  -4,  -4,  -4,   0,  -4,  -4,  -4,  -4,   0,   0,   0,   0,  -4], # 35
    [  -5,  -5,  -5,   0,  -5,  -5,  -5,  -5,   0,   0,   0,   0,  -5], # 36
    [  -6,  -6,  -6,   0,  -6,  -6,  -6,  -6,   0,   0,   0,   0,  -6], # 37
    [   9,   3,   4,   0,   5,   6,   7,  10,   0,   0,   0,   0,   0], # 38
    [   0,   0,   0,   0,   0,   0,   0,   0,  -8,  -8,  -8,   0,   0], # 39
    [   0,   0,   0,   0,   0,   0,   0,   0,  -9,  -9,  -9,   0,   0], # 40
    [   0,   0,   0,   0,   0,   0,   0,   0, -12, -12, -12,   0,   0], # 41
    [  -7,  -7,  -7,   0,  -7,  -7,  -7,  -7,   0,   0,   0,   0,  -7]  # 42
]

$reduce_table = [
    2,  #  0
    0,  #  1
    2,  #  2
    3,  #  3
    4,  #  4
    4,  #  5
    4,  #  6
    5,  #  7
    3,  #  8
    3,  #  9
    1,  # 10
    1,  # 11
    3   # 12
]

$goto_table = [
    # PROGRAM PROGRAM STMT STMT STMT STMT STMT STMT EXPR EXPR EXPR FACT FACT
    [       0,      0,   1,   1,   1,   1,   1,   1,   2,   2,   2,   8,   8],  #  0
    [      11,     11,   1,   1,   1,   1,   1,   1,   2,   2,   2,   8,   8],  #  1
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  #  2
    [       0,      0,   0,   0,   0,   0,   0,   0,  15,  15,  15,   8,   8],  #  3
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  #  4
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  #  5
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  #  6
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  #  7
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  #  8
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  #  9
    [       0,      0,   0,   0,   0,   0,   0,   0,  20,  20,  20,  21,  21],  # 10
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 11
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 12
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  24,  24],  # 13
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  25,  25],  # 14
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 15
    [       0,      0,   0,   0,   0,   0,   0,   0,  27,  27,  27,   8,   8],  # 16
    [       0,      0,   0,   0,   0,   0,   0,   0,  28,  28,  28,   8,   8],  # 17
    [       0,      0,   0,   0,   0,   0,   0,   0,  29,  29,  29,   8,   8],  # 18
    [       0,      0,   0,   0,   0,   0,   0,   0,  30,  30,  30,  21,  21],  # 19
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 20
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 21
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 22
    [       0,      0,   0,   0,   0,   0,   0,   0,  34,  34,  34,  21,  21],  # 23
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 24
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 25
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 26
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 27
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 28
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 29
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 30
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 31
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  39,  39],  # 32
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  40,  40],  # 33
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 34
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 35
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 36
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 37
    [       0,      0,  42,  42,  42,  42,  42,  42,   2,   2,   2,   8,   8],  # 38
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 39
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 40
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],  # 41
    [       0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]   # 42
]

def gen_action_table
    def convert (val)
        if val == 999
            sprintf("10'h3_00")
        elsif val > 0
            sprintf("10'h1_%02x", val)
        elsif val < 0
            sprintf("10'h2_%02x", -val)
        else
            sprintf("10'h0_00")
        end
    end

    rows = $action_table.length
    cols = $action_table[0].length
    fixed_cols = 1 << Math.log2($action_table[0].length).ceil

    for r in 0..(rows-1) do
        for c in 0..(cols-1) do
            print sprintf("action_table[%d] = %s; ", r * fixed_cols + c, convert($action_table[r][c]))
        end
        for c in cols..(fixed_cols-1) do
            print sprintf("action_table[%d] = 10'h0_00; ", r * fixed_cols + c)
        end
        puts ""
    end
end

def gen_reduce_table
    rows = $reduce_table.length
    for r in 0..(rows-1) do
        puts sprintf("reduce_table[%d] = 8'h%02x;", r, $reduce_table[r])
    end
end

def gen_goto_table
    rows = $action_table.length
    cols = $action_table[0].length
    fixed_cols = 1 << Math.log2($action_table[0].length).ceil

    for r in 0..(rows-1) do
        for c in 0..(cols-1) do
            print sprintf("goto_table[%d] = 8'h%02x; ", r * fixed_cols + c, $goto_table[r][c])
        end
        for c in cols..(fixed_cols-1) do
            print sprintf("goto_table[%d] = 8'h00; ", r * fixed_cols + c)
        end
        puts ""
    end
end

# gen_action_table
gen_reduce_table
# gen_goto_table
